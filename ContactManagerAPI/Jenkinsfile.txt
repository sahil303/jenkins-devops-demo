pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                echo 'Building the application...'
                script {
                    try {
                        bat 'dotnet build'
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }
        stage('Test') {
            steps {
                echo 'Running tests...'
                script {
                    try {
                        bat 'dotnet test'  
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to Staging environment...'
                script {
                    try {
                        bat 'dotnet publish --configuration Release --output ./staging'
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to Production environment...'
                script {
                    try {
                        bat 'dotnet publish --configuration Release --output ./production'
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline succeeded!'
            // You can add any additional actions here for successful execution
        }
        failure {
            echo 'Pipeline failed! Notifying team...'
            // Example: Send email or Slack notification
            // emailext to: 'team@example.com', subject: 'Build Failed', body: 'The Jenkins pipeline failed.'
        }
        unstable {
            echo 'Pipeline is unstable! Investigate the issues.'
            // Add actions for unstable builds (e.g., partial test failures)
        }
        always {
            echo 'Pipeline execution completed.'
            // Actions that should run regardless of the pipeline outcome, such as cleanup
        }
    }
}
